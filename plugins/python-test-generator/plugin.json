{
  "name": "python-test-generator",
  "version": "1.3.0",
  "displayName": "Python Test Generator",
  "description": "Geração automática de testes unitários Python com análise de cobertura e criação paralela de arquivos",
  "author": {
    "name": "Carlos Araujo",
    "email": "cadu.gevaerd@gmail.com",
    "github": "cadugevaerd"
  },
  "repository": "claudecode_plugins",
  "license": "MIT",
  "keywords": [
    "python",
    "testing",
    "pytest",
    "unittest",
    "coverage",
    "langchain",
    "fastapi",
    "django",
    "mock",
    "automation"
  ],
  "commands": [
    {
      "name": "py-test",
      "description": "Gera testes unitários Python automaticamente com an\u00e1lise de cobertura",
      "path": "commands/py-test.md"
    }
  ],
  "agents": [
    {
      "name": "test-assistant",
      "description": "Especialista em criar testes unit\u00e1rios completos com mocks, fixtures e padr\u00f5es do projeto",
      "path": "agents/test-assistant.md"
    }
  ],
  "features": [
    "Cria\u00e7\u00e3o paralela de m\u00faltiplos arquivos de teste (at\u00e9 80% mais r\u00e1pido)",
    "Detec\u00e7\u00e3o autom\u00e1tica de frameworks Python (pytest, unittest, nose)",
    "An\u00e1lise de cobertura com pytest-cov",
    "Suporte a LangChain, LangGraph, FastAPI, Django, Flask",
    "Mocks avan\u00e7ados de chains LangChain com pipe operators",
    "Mock correto de vari\u00e1veis module-level",
    "Gerenciamento de vari\u00e1veis globais/cache com fixtures autouse",
    "Valida\u00e7\u00e3o de cleanup de recursos (DB, files, sockets)",
    "Suporte a c\u00f3digo ass\u00edncrono (pytest-asyncio)",
    "Reutiliza\u00e7\u00e3o de fixtures existentes (conftest.py)",
    "Testes seguros para execu\u00e7\u00e3o paralela (pytest-xdist)",
    "AAA pattern (Arrange-Act-Assert)",
    "Happy path + error handling + edge cases"
  ],
  "supportedFrameworks": [
    "pytest",
    "unittest",
    "nose",
    "FastAPI",
    "Django",
    "Flask",
    "LangChain",
    "LangGraph",
    "AWS Lambda",
    "SQLAlchemy",
    "Pynamodb"
  ],
  "requirements": {
    "python": ">=3.8",
    "pytest": ">=7.0.0",
    "pytest-cov": ">=3.0.0"
  },
  "changelog": {
    "1.2.0": {
      "date": "2025-10-20",
      "changes": [
        "Adiciona padr\u00e3o de gerenciamento de vari\u00e1veis globais/cache com fixtures autouse",
        "Adiciona padr\u00e3o de valida\u00e7\u00e3o de cleanup de recursos (close, disconnect)",
        "Adiciona Erro 4: vazamento de estado entre testes",
        "Adiciona Erro 5: vazamento de recursos (too many connections/files)",
        "Melhora checklist de valida\u00e7\u00e3o com se\u00e7\u00f5es de cache e cleanup",
        "Previne falhas em testes paralelos (pytest-xdist)"
      ]
    },
    "1.1.0": {
      "date": "2025-10-20",
      "changes": [
        "Adiciona padr\u00f5es avan\u00e7ados de mock para LangChain chains (pipe operators)",
        "Adiciona detec\u00e7\u00e3o e mock correto de vari\u00e1veis module-level",
        "Adiciona base de conhecimento de erros comuns",
        "Adiciona checklist de valida\u00e7\u00e3o de mocks",
        "Melhora na qualidade dos testes gerados automaticamente"
      ]
    },
    "1.0.0": {
      "date": "2025-01-15",
      "changes": [
        "Lan\u00e7amento inicial do plugin",
        "Suporte a pytest, unittest e nose",
        "An\u00e1lise de cobertura autom\u00e1tica",
        "Cria\u00e7\u00e3o paralela de testes",
        "Suporte a LangChain, FastAPI, Django"
      ]
    }
  },
  "documentation": {
    "readme": "README.md",
    "examples": [
      "tests/unit/test_node_analisar_conversa.py",
      "tests/unit/test_tools_o365.py"
    ]
  }
}